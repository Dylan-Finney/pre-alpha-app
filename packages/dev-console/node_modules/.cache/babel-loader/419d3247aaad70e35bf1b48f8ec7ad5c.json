{"ast":null,"code":"// /* eslint-disable react/display-name */\n// /* eslint-disable react/no-multi-comp */\n// import React, { useRef, useState, useEffect } from \"react\";\n// import { Auth, API as GRAPHQL } from \"aws-amplify\";\n// import config, { REFRESH_TOKEN_EXPIRY } from \"../config\";\n// import AWSAppSyncClient, { AUTH_TYPE } from \"aws-appsync\";\n// import {\n//   getPrifinaUserQuery,\n//   updateUserProfileMutation,\n//   getPrifinaSessionQuery,\n// } from \"../graphql/api\";\n// import { default as DefaultApp } from \"../pages/Home\";\n// import { useFormFields } from \"../lib/formFields\";\n// import sha512 from \"crypto-js/sha512\";\n// import Base64 from \"crypto-js/enc-base64\";\n// const APIConfig = {\n//   aws_appsync_graphqlEndpoint: config.appSync.aws_appsync_graphqlEndpoint,\n//   aws_appsync_region: config.main_region,\n//   aws_appsync_authenticationType: config.appSync.aws_appsync_authenticationType,\n// };\n// const AUTHConfig = {\n//   // To get the aws credentials, you need to configure\n//   // the Auth module with your Cognito Federated Identity Pool\n//   mandatorySignIn: false,\n//   userPoolId: config.cognito.USER_POOL_ID,\n//   identityPoolId: config.cognito.IDENTITY_POOL_ID,\n//   userPoolWebClientId: config.cognito.APP_CLIENT_ID,\n//   region: config.main_region,\n// };\n// const S3Config = {\n//   AWSS3: {\n//     bucket: config.S3.bucket, //REQUIRED -  Amazon S3 bucket name\n//     region: config.S3.region, //OPTIONAL -  Amazon service region\n//   },\n// };\n// export default { title: \"DefaultApp\" };\n// export const defaultApp = props => {\n//   console.log(\"COMPONENT ---> \", props);\n//   console.log(\"CONFIG \", config);\n//   const [settingsReady, setSettingsReady] = useState(false);\n//   const clientHandler = useRef(null);\n//   const prifinaID = useRef(\"\");\n//   const [login, setLogin] = useState(true);\n//   const [loginFields, handleChange] = useFormFields({\n//     username: \"\",\n//     password: \"\",\n//   });\n//   const refreshSession = useRef(false);\n//   Auth.configure(AUTHConfig);\n//   GRAPHQL.configure(APIConfig);\n//   //Amplify.configure(APIConfig);\n//   //Amplify.configure(S3Config);\n//   console.log(\"AUTH CONFIG \", AUTHConfig);\n//   const createClient = (endpoint, region) => {\n//     const client = new AWSAppSyncClient({\n//       url: endpoint,\n//       region: region,\n//       auth: {\n//         type: AUTH_TYPE.AWS_IAM,\n//         credentials: () => Auth.currentCredentials(),\n//       },\n//       /*\n//     auth: {\n//       type: AUTH_TYPE.AMAZON_COGNITO_USER_POOLS,\n//       jwtToken: async () =>\n//         (await Auth.currentSession()).getIdToken().getJwtToken(),\n//     },\n//     */\n//       disableOffline: true,\n//     });\n//     return client;\n//   };\n//   // get user auth...\n//   useEffect(async () => {\n//     let _currentUser = {};\n//     const tracker = Base64.stringify(sha512(window.deviceFingerPrint));\n//     const lastAuthUser = localStorage.getItem(\n//       \"CognitoIdentityServiceProvider.\" +\n//         config.cognito.APP_CLIENT_ID +\n//         \".LastAuthUser\",\n//     );\n//     const currentIdToken = localStorage.getItem(\n//       \"CognitoIdentityServiceProvider.\" +\n//         config.cognito.APP_CLIENT_ID +\n//         \".\" +\n//         lastAuthUser +\n//         \".idToken\",\n//     );\n//     try {\n//       if (login) {\n//         const session = await Auth.currentSession();\n//         console.log(\"SESSION \", session);\n//         if (!session) {\n//           console.log(\"NO CURRENT SESSION FOUND\");\n//         }\n//         console.log(\"PRIFINA-ID\", session.idToken.payload[\"custom:prifina\"]);\n//         /*\n//         prifinaID.current = session.idToken.payload[\"custom:prifina\"];\n//         const currentPrifinaUser = await getPrifinaUserQuery(\n//           GRAPHQL,\n//           prifinaID.current,\n//         );\n//         console.log(\"CURRENT USER \", currentPrifinaUser);\n//         const appProfile = JSON.parse(\n//           currentPrifinaUser.data.getPrifinaUser.appProfile,\n//         );\n//         console.log(\"CURRENT USER \", appProfile, appProfile.initials);\n//         let clientEndpoint = \"\";\n//         let clientRegion = \"\";\n//         if (!appProfile.hasOwnProperty(\"endpoint\")) {\n//           const defaultProfileUpdate = await updateUserProfileMutation(\n//             API,\n//             currentUser.prifinaID,\n//           );\n//           console.log(\"PROFILE UPDATE \", defaultProfileUpdate);\n//           appProfile = JSON.parse(\n//             defaultProfileUpdate.data.updateUserProfile.appProfile,\n//           );\n//         }\n//         clientEndpoint = appProfile.endpoint;\n//         clientRegion = appProfile.region;\n//         const client = createClient(clientEndpoint, clientRegion);\n//         clientHandler.current = client;\n//         setSettingsReady(true);\n//         */\n//         /*  \n//         let clientEndpoint =\n//           \"https://kxsr2w4zxbb5vi5p7nbeyfzuee.appsync-api.us-east-1.amazonaws.com/graphql\";\n//         let clientRegion = \"us-east-1\";\n//         if (appProfile.hasOwnProperty(\"endpoint\")) {\n//           clientEndpoint = appProfile.endpoint;\n//           clientRegion = appProfile.region;\n//         }\n//         clientHandler.current = createClient(clientEndpoint, clientRegion);\n//         setSettingsReady(true);\n//         */\n//       }\n//     } catch (e) {\n//       if (typeof e === \"string\" && e === \"No current user\") {\n//         const prifinaSession = await getPrifinaSessionQuery(GRAPHQL, tracker);\n//         console.log(\"AUTH SESSION \", prifinaSession);\n//         if (prifinaSession.data.getSession === null) {\n//           localStorage.removeItem(\"LastSessionIdentityPool\");\n//           refreshSession.current = true;\n//           console.log(\"NO SSO SESSION FOUND\");\n//         } else {\n//           let tokens = JSON.parse(prifinaSession.data.getSession.tokens);\n//           Object.keys(tokens).forEach(key => {\n//             localStorage.setItem(key, tokens[key]);\n//           });\n//           //CognitoIdentityId-us-east-1:27d0bb9c-b563-497b-ad0f-82b0ceb9eb0c\n//           localStorage.setItem(\n//             \"LastSessionIdentityPool\",\n//             prifinaSession.data.getSession.identityPool,\n//           );\n//           console.log(\"AUTH OBJ \", Auth);\n//           window.location.reload();\n//         }\n//       }\n//       if (typeof e === \"string\" && e === \"No current user\") {\n//         //setLogin(false);\n//         //const user = await Auth.signIn(\"tahola\", \"xxxx\");\n//         //console.log(\"AUTH \", user);\n//         //console.log(\"APP DEBUG \", appCode);\n//       }\n//       console.log(\"AUTH \", e);\n//     }\n//   }, [login]);\n//   return (\n//     <>\n//       {!login && (\n//         <div>\n//           <div>\n//             Username:\n//             <input id={\"username\"} name={\"username\"} onChange={handleChange} />\n//           </div>\n//           <div>\n//             Password:\n//             <input id={\"password\"} name={\"password\"} onChange={handleChange} />\n//           </div>\n//           <div>\n//             <button\n//               onClick={e => {\n//                 //console.log(loginFields);\n//                 Auth.signIn(loginFields.username, loginFields.password).then(\n//                   () => {\n//                     setLogin(true);\n//                   },\n//                 );\n//               }}\n//             >\n//               Login\n//             </button>\n//           </div>\n//         </div>\n//       )}\n//       {login && settingsReady && (\n//         <DefaultApp\n//           appSyncClient={clientHandler.current}\n//           prifinaID={prifinaID.current}\n//           GraphQLClient={GRAPHQL}\n//         />\n//       )}\n//       {!settingsReady && <div />}\n//     </>\n//   );\n// };\n// defaultApp.story = {\n//   name: \"Default App\",\n// };\n// defaultApp.story = {\n//   name: \"Default APP\",\n//   /*\n//   decorators: [\n//     Story => {\n//       //console.log(\"PROVIDER \", PrifinaProvider);\n//       return (\n//         <PrifinaProvider\n//           stage={\"alpha\"}\n//           Context={PrifinaContext}\n//           activeUser={{\n//             name: \"Active user tero\",\n//             uuid: \"13625638c207ed2fcd5a7b7cfb2364a04661\",\n//           }}\n//         >\n//           <Story />\n//         </PrifinaProvider>\n//       );\n//     },\n//   ],\n//   */\n// };","map":{"version":3,"sources":["/Users/hamza/Prifina/pre-alpha-app/packages/dev-console/src/stories/DefaultApp.stories.js"],"names":[],"mappingssourcesContent":["// /* eslint-disable react/display-name */\n// /* eslint-disable react/no-multi-comp */\n\n// import React, { useRef, useState, useEffect } from \"react\";\n\n// import { Auth, API as GRAPHQL } from \"aws-amplify\";\n\n// import config, { REFRESH_TOKEN_EXPIRY } from \"../config\";\n\n// import AWSAppSyncClient, { AUTH_TYPE } from \"aws-appsync\";\n\n// import {\n//   getPrifinaUserQuery,\n//   updateUserProfileMutation,\n//   getPrifinaSessionQuery,\n// } from \"../graphql/api\";\n\n// import { default as DefaultApp } from \"../pages/Home\";\n\n// import { useFormFields } from \"../lib/formFields\";\n\n// import sha512 from \"crypto-js/sha512\";\n// import Base64 from \"crypto-js/enc-base64\";\n\n// const APIConfig = {\n//   aws_appsync_graphqlEndpoint: config.appSync.aws_appsync_graphqlEndpoint,\n//   aws_appsync_region: config.main_region,\n//   aws_appsync_authenticationType: config.appSync.aws_appsync_authenticationType,\n// };\n\n// const AUTHConfig = {\n//   // To get the aws credentials, you need to configure\n//   // the Auth module with your Cognito Federated Identity Pool\n//   mandatorySignIn: false,\n//   userPoolId: config.cognito.USER_POOL_ID,\n//   identityPoolId: config.cognito.IDENTITY_POOL_ID,\n//   userPoolWebClientId: config.cognito.APP_CLIENT_ID,\n//   region: config.main_region,\n// };\n\n// const S3Config = {\n//   AWSS3: {\n//     bucket: config.S3.bucket, //REQUIRED -  Amazon S3 bucket name\n//     region: config.S3.region, //OPTIONAL -  Amazon service region\n//   },\n// };\n\n// export default { title: \"DefaultApp\" };\n\n// export const defaultApp = props => {\n//   console.log(\"COMPONENT ---> \", props);\n//   console.log(\"CONFIG \", config);\n//   const [settingsReady, setSettingsReady] = useState(false);\n//   const clientHandler = useRef(null);\n\n//   const prifinaID = useRef(\"\");\n//   const [login, setLogin] = useState(true);\n\n//   const [loginFields, handleChange] = useFormFields({\n//     username: \"\",\n//     password: \"\",\n//   });\n\n//   const refreshSession = useRef(false);\n\n//   Auth.configure(AUTHConfig);\n//   GRAPHQL.configure(APIConfig);\n\n//   //Amplify.configure(APIConfig);\n//   //Amplify.configure(S3Config);\n//   console.log(\"AUTH CONFIG \", AUTHConfig);\n\n//   const createClient = (endpoint, region) => {\n//     const client = new AWSAppSyncClient({\n//       url: endpoint,\n//       region: region,\n//       auth: {\n//         type: AUTH_TYPE.AWS_IAM,\n//         credentials: () => Auth.currentCredentials(),\n//       },\n//       /*\n//     auth: {\n//       type: AUTH_TYPE.AMAZON_COGNITO_USER_POOLS,\n//       jwtToken: async () =>\n//         (await Auth.currentSession()).getIdToken().getJwtToken(),\n//     },\n//     */\n//       disableOffline: true,\n//     });\n//     return client;\n//   };\n\n//   // get user auth...\n//   useEffect(async () => {\n//     let _currentUser = {};\n//     const tracker = Base64.stringify(sha512(window.deviceFingerPrint));\n//     const lastAuthUser = localStorage.getItem(\n//       \"CognitoIdentityServiceProvider.\" +\n//         config.cognito.APP_CLIENT_ID +\n//         \".LastAuthUser\",\n//     );\n//     const currentIdToken = localStorage.getItem(\n//       \"CognitoIdentityServiceProvider.\" +\n//         config.cognito.APP_CLIENT_ID +\n//         \".\" +\n//         lastAuthUser +\n//         \".idToken\",\n//     );\n\n//     try {\n//       if (login) {\n//         const session = await Auth.currentSession();\n\n//         console.log(\"SESSION \", session);\n//         if (!session) {\n//           console.log(\"NO CURRENT SESSION FOUND\");\n//         }\n//         console.log(\"PRIFINA-ID\", session.idToken.payload[\"custom:prifina\"]);\n//         /*\n//         prifinaID.current = session.idToken.payload[\"custom:prifina\"];\n\n//         const currentPrifinaUser = await getPrifinaUserQuery(\n//           GRAPHQL,\n//           prifinaID.current,\n//         );\n\n//         console.log(\"CURRENT USER \", currentPrifinaUser);\n\n//         const appProfile = JSON.parse(\n//           currentPrifinaUser.data.getPrifinaUser.appProfile,\n//         );\n//         console.log(\"CURRENT USER \", appProfile, appProfile.initials);\n\n//         let clientEndpoint = \"\";\n//         let clientRegion = \"\";\n//         if (!appProfile.hasOwnProperty(\"endpoint\")) {\n//           const defaultProfileUpdate = await updateUserProfileMutation(\n//             API,\n//             currentUser.prifinaID,\n//           );\n//           console.log(\"PROFILE UPDATE \", defaultProfileUpdate);\n//           appProfile = JSON.parse(\n//             defaultProfileUpdate.data.updateUserProfile.appProfile,\n//           );\n//         }\n//         clientEndpoint = appProfile.endpoint;\n//         clientRegion = appProfile.region;\n\n//         const client = createClient(clientEndpoint, clientRegion);\n//         clientHandler.current = client;\n//         setSettingsReady(true);\n//         */\n//         /*  \n//         let clientEndpoint =\n//           \"https://kxsr2w4zxbb5vi5p7nbeyfzuee.appsync-api.us-east-1.amazonaws.com/graphql\";\n//         let clientRegion = \"us-east-1\";\n//         if (appProfile.hasOwnProperty(\"endpoint\")) {\n//           clientEndpoint = appProfile.endpoint;\n//           clientRegion = appProfile.region;\n//         }\n\n//         clientHandler.current = createClient(clientEndpoint, clientRegion);\n\n//         setSettingsReady(true);\n//         */\n//       }\n//     } catch (e) {\n//       if (typeof e === \"string\" && e === \"No current user\") {\n//         const prifinaSession = await getPrifinaSessionQuery(GRAPHQL, tracker);\n//         console.log(\"AUTH SESSION \", prifinaSession);\n//         if (prifinaSession.data.getSession === null) {\n//           localStorage.removeItem(\"LastSessionIdentityPool\");\n//           refreshSession.current = true;\n//           console.log(\"NO SSO SESSION FOUND\");\n//         } else {\n//           let tokens = JSON.parse(prifinaSession.data.getSession.tokens);\n//           Object.keys(tokens).forEach(key => {\n//             localStorage.setItem(key, tokens[key]);\n//           });\n//           //CognitoIdentityId-us-east-1:27d0bb9c-b563-497b-ad0f-82b0ceb9eb0c\n//           localStorage.setItem(\n//             \"LastSessionIdentityPool\",\n//             prifinaSession.data.getSession.identityPool,\n//           );\n\n//           console.log(\"AUTH OBJ \", Auth);\n//           window.location.reload();\n//         }\n//       }\n\n//       if (typeof e === \"string\" && e === \"No current user\") {\n//         //setLogin(false);\n//         //const user = await Auth.signIn(\"tahola\", \"xxxx\");\n//         //console.log(\"AUTH \", user);\n//         //console.log(\"APP DEBUG \", appCode);\n//       }\n\n//       console.log(\"AUTH \", e);\n//     }\n//   }, [login]);\n\n//   return (\n//     <>\n//       {!login && (\n//         <div>\n//           <div>\n//             Username:\n//             <input id={\"username\"} name={\"username\"} onChange={handleChange} />\n//           </div>\n//           <div>\n//             Password:\n//             <input id={\"password\"} name={\"password\"} onChange={handleChange} />\n//           </div>\n//           <div>\n//             <button\n//               onClick={e => {\n//                 //console.log(loginFields);\n//                 Auth.signIn(loginFields.username, loginFields.password).then(\n//                   () => {\n//                     setLogin(true);\n//                   },\n//                 );\n//               }}\n//             >\n//               Login\n//             </button>\n//           </div>\n//         </div>\n//       )}\n//       {login && settingsReady && (\n//         <DefaultApp\n//           appSyncClient={clientHandler.current}\n//           prifinaID={prifinaID.current}\n//           GraphQLClient={GRAPHQL}\n//         />\n//       )}\n//       {!settingsReady && <div />}\n//     </>\n//   );\n// };\n\n// defaultApp.story = {\n//   name: \"Default App\",\n// };\n\n// defaultApp.story = {\n//   name: \"Default APP\",\n//   /*\n//   decorators: [\n//     Story => {\n//       //console.log(\"PROVIDER \", PrifinaProvider);\n//       return (\n//         <PrifinaProvider\n//           stage={\"alpha\"}\n//           Context={PrifinaContext}\n//           activeUser={{\n//             name: \"Active user tero\",\n//             uuid: \"13625638c207ed2fcd5a7b7cfb2364a04661\",\n//           }}\n//         >\n//           <Story />\n//         </PrifinaProvider>\n//       );\n//     },\n//   ],\n//   */\n// };\n"]},"metadata":{},"sourceType":"module"}